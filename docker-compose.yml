version: '3.8'

services:
  db:
    image: postgres:13
    container_name: skillkit_db
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - skillkit_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: skillkit_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD}'
    ports:
      - '${PGADMIN_PORT}:80'
    networks:
      - skillkit_network
    depends_on:
      - db
    links:
      - db

  dev:
    build:
      context: .
      target: dependencies
    container_name: skillkit_backend_dev
    env_file: .env
    expose:
      - '${PORT:-8000}'
    ports:
      - '${PORT:-8000}:${PORT:-8000}'
    depends_on:
      - db
      - pgadmin
    networks:
      - skillkit_network
    restart: unless-stopped
    command: yarn dev
    volumes:
      - type: bind
        source: ./storage
        target: /app/storage

  prod:
    build:
      context: .
      target: runner
    container_name: skillkit_backend_prod
    env_file: .env
    expose:
      - '${PORT:-8000}'
    ports:
      - '${PORT:-8000}:${PORT:-8000}'
    depends_on:
      - db
      - pgadmin
    restart: unless-stopped
    networks:
      - skillkit_network
    volumes:
      - type: bind
        source: ./storage
        target: /app/storage

networks:
  skillkit_network:

volumes:
  db-data:
